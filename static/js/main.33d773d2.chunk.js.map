{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["store","initialState","this","state","listeners","Set","listener","add","delete","forEach","fn","updater","newState","produce","draft","notify","saving","loading","todo","title","done","todos","saveTodo","update","Promise","resolve","setTimeout","id","map","item","Math","random","push","updateTodo","current","removeTodo","filter","React","createContext","Provider","Consumer","connect","selector","Comp","props","myProps","TodoItem","onClick","e","selectTodo","type","checked","onChange","PureComponent","TodoList","completed","length","Fragment","TodoEditorComponent","input","createRef","onSubmit","preventDefault","then","value","focus","ref","disabled","target","TodoEditor","TodoContainer","unsubscribe","subscribe","setState","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.33d773d2.chunk.js","sourcesContent":["import React, { Component, PureComponent } from 'react';\nimport produce from 'immer';\n\nclass Store {\n  constructor(initialState = {}) {\n    this.state = initialState;\n    this.listeners = new Set();\n  }\n\n  subscribe(listener) {\n    this.listeners.add(listener);\n    return () => this.listeners.delete(listener);\n  }\n\n  notify() {\n    this.listeners.forEach(fn => fn(this.state));\n  }\n\n  update(updater) {\n    const newState = produce(this.state, draft => {\n      updater(draft);\n    });\n    if (newState && newState !== this.state) {\n      this.state = newState;\n      this.notify();\n    }\n  }\n}\n\nconst store = new Store({\n  saving: false,\n  loading: false,\n  todo: {\n    title: '',\n    done: false,\n  },\n  todos: [],\n});\n\nconst fetchTodos = () => {\n  store.update(draft => (draft.loading = true));\n  // simulate async data fetch\n  return new Promise(resolve => {\n    setTimeout(() => {\n      store.update(draft => {\n        draft.todos = [\n          { id: Math.random(), title: 'Hello...', done: false },\n          { id: Math.random(), title: 'World...', done: false },\n          { id: Math.random(), title: 'Hello World...', done: true },\n        ];\n        draft.loading = false;\n        resolve();\n      });\n    }, 1000);\n  });\n};\n\nconst saveTodo = () => {\n  store.update(draft => (draft.saving = true));\n  // simulate async save\n  return new Promise(resolve => {\n    setTimeout(() => {\n      store.update(draft => {\n        const todo = draft.todo;\n        if (!todo.id) {\n          todo.id = Math.random();\n          draft.todos.push(todo);\n        } else {\n          draft.todos = draft.todos.map(item => (item.id === todo.id ? todo : item));\n        }\n        draft.todo = { title: '', done: false };\n        draft.saving = false;\n        resolve();\n      });\n    }, 1000);\n  });\n};\n\nconst updateTodo = todo => {\n  store.update(draft => {\n    const current = (draft.todo = { ...draft.todo, ...todo });\n    if (current.id) {\n      draft.todos = draft.todos.map(item => (item.id === current.id ? current : item));\n    }\n  });\n};\n\nconst removeTodo = todo => {\n  store.update(draft => (draft.saving = true));\n  // simulate async delete\n  return new Promise(resolve => {\n    setTimeout(\n      () =>\n        store.update(draft => {\n          draft.todos = draft.todos.filter(item => item.id !== todo.id);\n          draft.todo = { title: '', done: false };\n          draft.saving = false;\n        }),\n      1000,\n    );\n  });\n};\n\nconst selectTodo = todo => {\n  store.update(draft => {\n    draft.todo = todo;\n  });\n};\n\nconst { Provider, Consumer } = React.createContext();\n\nconst connect = selector => Comp => props => (\n  <Consumer>\n    {state => {\n      const myProps = selector(state);\n      return <Comp {...props} {...myProps} />;\n    }}\n  </Consumer>\n);\n\nclass TodoItem extends PureComponent {\n  render() {\n    const { todo } = this.props;\n    return (\n      <li key={todo.id} onClick={e => selectTodo(todo)}>\n        <input\n          type=\"checkbox\"\n          checked={todo.done}\n          onChange={e => updateTodo({ done: !todo.done })}\n        />\n        {todo.title}\n      </li>\n    );\n  }\n}\n\nconst TodoListComponent = ({ loading, todos, completed }) => {\n  if (loading) return <div>Loading</div>;\n  return (\n    <React.Fragment>\n      <ul>\n        {todos.map(todo => (\n          <TodoItem todo={todo} key={todo.id} />\n        ))}\n      </ul>\n      <div>Completed: {completed}</div>\n    </React.Fragment>\n  );\n};\n\nconst TodoList = connect(state => ({\n  todos: state.todos,\n  loading: state.loading,\n  completed: state.todos.filter(item => item.done).length,\n}))(TodoListComponent);\n\nclass TodoEditorComponent extends PureComponent {\n  input = React.createRef();\n\n  onSubmit = e => {\n    e.preventDefault();\n    saveTodo().then(() => {\n      this.input.current.value = '';\n      this.input.current.focus();\n    });\n  };\n\n  render() {\n    const { todo, saving, updateTodo, removeTodo } = this.props;\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          type=\"text\"\n          ref={this.input}\n          disabled={saving}\n          value={todo.title}\n          onChange={e => updateTodo({ title: e.target.value })}\n        />\n        <button disabled={saving}>Add</button>\n        {todo.id && (\n          <button type=\"button\" disabled={saving} onClick={e => removeTodo(todo)}>\n            Delete\n          </button>\n        )}\n      </form>\n    );\n  }\n}\n\nconst TodoEditor = connect(state => ({\n  todo: state.todo,\n  saving: state.saving,\n  updateTodo,\n  removeTodo,\n}))(TodoEditorComponent);\n\nclass TodoContainer extends Component {\n  state = store.state;\n\n  componentWillMount() {\n    this.unsubscribe = store.subscribe(state => this.setState(state));\n  }\n\n  componentDidMount() {\n    fetchTodos();\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    return (\n      <Provider value={this.state}>\n        <div>\n          <TodoEditor />\n          <TodoList />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default TodoContainer;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}